@model AuthService.MVC.Models.Pagination.OrderOutput


<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Orders</h1>
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <ul class="nav nav-tabs nav-justified">
                <li class="nav-item">
                    <a class="nav-link" id="all-tab" href="/Admin/Order/Index">All</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="pending-tab" href="/Admin/Order/Index?status=1">Pending</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="delivering-tab" href="/Admin/Order/Index?status=2">Delivering</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="received-tab" href="/Admin/Order/Index?status=3">Received</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="cancelled-tab" href="/Admin/Order/Index?status=4">Cancelled</a>
                </li>
            </ul>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>No.</th>
                            <th>Customer name</th>
                            <th>Phone number</th>
                            <th>Order date</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var i = (Model.Page - 1) * 4 + 1;
                        }
                        @foreach (var order in Model.ListResult)
                        {
                            <tr>
                                <td>@i</td>
                                <td>@order.CustomerName</td>
                                <td>@order.PhoneNumber</td>
                                <td>@order.UpdatedTime.ToString("MMMM dd, yyyy")</td>
                                <td>
                                    @{
                                        if (order.Status == AuthService.MVC.Constants.OrderStatus.PENDING)
                                        {
                                            <div id="status-@order.Id" class="text-danger">Pending</div>
                                        }
                                        if (order.Status == AuthService.MVC.Constants.OrderStatus.DELIVERING)
                                        {
                                            <div id="status-@order.Id" class="text-info">Delevering</div>
                                        }
                                        if (order.Status == AuthService.MVC.Constants.OrderStatus.RECEIVED)
                                        {
                                            <div id="status-@order.Id" class="text-success">Received</div>
                                        }
                                        if (order.Status == AuthService.MVC.Constants.OrderStatus.CANCELED)
                                        {
                                            <div id="status-@order.Id" class="text-dark">Cancelled</div>
                                        }
                                    }
                                </td>
                                <td>
                                    <form style="display: inline" method="get" action="/admin/order/edit/@order.Id">
                                        <button class="btn btn-info">Detail</button>
                                    </form>
                                </td>
                            </tr>
                            i++;
                        }
                    </tbody>
                </table>
                @{
                    var paginationData = new AuthService.MVC.Models.Pagination.Pagination()
                    {
                        Page = Model.Page,
                        TotalPage = Model.TotalPage
                    };
                }
                <partial name="_Pagination" model="@paginationData" />
            </div>
        </div>
    </div>

</div>

<script>
    // Lấy tham số status từ URL
    const params = new URLSearchParams(window.location.search);
    const status = params.get('status');

    // Xác định phần tử cần thêm class active
    const allTab = document.getElementById('all-tab');
    const pendingTab = document.getElementById('pending-tab');
    const deliveringTab = document.getElementById('delivering-tab');
    const receivedTab = document.getElementById('received-tab');
    const cancelledTab = document.getElementById('cancelled-tab');

    // Xóa class active mặc định
    allTab.classList.remove('active');

    // Thêm class active vào phần tử tương ứng
    switch (status) {
        case '1':
            pendingTab.classList.add('active');
            break;
        case '2':
            deliveringTab.classList.add('active');
            break;
        case '3':
            receivedTab.classList.add('active');
            break;
        case '4':
            cancelledTab.classList.add('active');
            break;
        default:
            allTab.classList.add('active');
            break;
    }
</script>