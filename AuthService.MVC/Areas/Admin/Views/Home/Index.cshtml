

@{
    var userCount = ViewData["userCount"] != null ? ViewData["userCount"] : 0;
    var messageCount = ViewData["messageCount"] != null ? ViewData["messageCount"] : 0;
    var orders = ViewData["orders"] != null ? ViewData["orders"] as List<AuthService.MVC.Models.OrderViewModel> : new List<AuthService.MVC.Models.OrderViewModel>();
    var total = ViewData["total"] != null ? ViewData["total"] : 0f;
    var monthlyRevenue = ViewData["monthlyRevenue"] != null ? ViewData["monthlyRevenue"] as List<float> : new List<float>();
    var monthlyOrders = ViewData["monthlyOrders"] != null ? ViewData["monthlyOrders"] as Dictionary<AuthService.MVC.Constants.OrderStatus, int> : new Dictionary<AuthService.MVC.Constants.OrderStatus, int>();
}

<div class="container-fluid">

    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Dashboard</h1>
    </div>

    <!-- Content Row -->
    <div class="row">

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Members
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@userCount</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-calendar fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Earnings (Annual)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">$@Math.Round((float)total, 2)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Orders (Annual)
                            </div>
                            <div class="row no-gutters align-items-center">
                                <div class="col-auto">
                                    <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800">@orders.Count</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pending Requests Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Messages (Daily)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@messageCount</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-comments fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Content Row -->

    <div class="row">

        <!-- Area Chart -->
        <div class="col-xl-8 col-lg-7">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Earnings Overview</h6>
                    <select onchange="handleChangeBarChart(this)" value="2024">
                        @for (int i = DateTime.Now.Year; i >= 2015; i--)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>
                <!-- Card Body -->
                <div class="card-body">
                    <div id="barChartContainer" class="chart-area">
                        <canvas id="barChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pie Chart -->
        <div class="col-xl-4 col-lg-5">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Number of orders</h6>
                    <input onchange="handleChangPieChart(this)" type="month" id="month" name="month" value='@(DateTime.Now.Year.ToString() + "-" + (@DateTime.Now.Month >= 10 ? @DateTime.Now.Month.ToString() : ("0" + @DateTime.Now.Month.ToString())))'>
                </div>
                <!-- Card Body -->
                <div id="pieChartContainer" class="card-body">
                    <div class="chart-pie pt-4 pb-2">
                        <canvas id="pieChart"></canvas>
                    </div>
                    <div class="mt-4 text-center small">
                        <span class="mr-2">
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>



<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const bar = document.getElementById('barChart');
    const pie = document.getElementById('pieChart').getContext('2d');

    var monthlyRevenue = ['@(monthlyRevenue[0])',
                        '@(monthlyRevenue[1])',
                        '@(monthlyRevenue[2])',
                        '@(monthlyRevenue[3])',
                        '@(monthlyRevenue[4])',
                        '@(monthlyRevenue[5])',
                        '@(monthlyRevenue[6])',
                        '@(monthlyRevenue[7])',
                        '@(monthlyRevenue[8])',
                        '@(monthlyRevenue[9])',
                        '@(monthlyRevenue[10])',
                        '@(monthlyRevenue[11])']
    const initBarChart = (bar, monthlyRevenue) => {
        new Chart(bar, {
            type: 'bar',
            data: {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                datasets: [{
                    label: 'Monthly revenue ($)',
                    data: monthlyRevenue,
                    borderWidth: 1,
                    backgroundColor: 'rgb(54, 162, 235)',
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    var data = ['@monthlyOrders[AuthService.MVC.Constants.OrderStatus.PENDING]',
                '@monthlyOrders[AuthService.MVC.Constants.OrderStatus.DELIVERING]',
                '@monthlyOrders[AuthService.MVC.Constants.OrderStatus.RECEIVED]',
                '@monthlyOrders[AuthService.MVC.Constants.OrderStatus.CANCELED]'];
    const initPieChart = (pie, data) => {
        new Chart(pie, {
        type: 'pie',
        data: {
            labels: ['Pending', 'Delevering', 'Received', 'Cancelled'],
            datasets: [{
                label: 'Quantity',
                data: data,
                backgroundColor: [
                    'rgb(255, 99, 132)',
                    'rgb(54, 162, 235)',
                    'rgb(255, 206, 86)',
                    'rgb(75, 192, 192)'
                ],
                borderColor: [
                    '#ccc',
                    '#ccc',
                    '#ccc',
                    '#ccc'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                tooltip: {
                    enabled: true,
                },
            }
        }
    });
    }

    initBarChart(bar, monthlyRevenue);
    initPieChart(pie, data);

    const handleChangeBarChart = (element) => {
        $.ajax({
            url: `/Admin/GetMonthlyRevenue?year=${element.value}`,
            type: 'GET',
            success: (response) => {
                const barContainer = document.getElementById('barChartContainer');
                barContainer.innerHTML = `<canvas id="barChart"></canvas>`;
                const bar = document.getElementById('barChart');
                initBarChart(bar, response);
            },
            error: (xhr, status, error) => {

            }
        })
    }

    const handleChangPieChart = (element) => {
        var [year, month] = element.value.split("-");
        $.ajax({
            url: `/Admin/GetMonthlyOrders?year=${year}&month=${month}`,
            type: 'GET',
            success: (response) => {
                initPieChart(pie, [response.PENDING, response.DELIVERING, response.RECEIVED, response.CANCELED]);
            },
            error: (xhr, status, error) => {

            }
        })
    }
</script>